{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "button-shadcn",
  "type": "registry:ui",
  "title": "Button",
  "description": "A customizable button component",
  "dependencies": [
    "class-variance-authority",
    "clsx",
    "tailwind-merge",
    "@radix-ui/react-slot"
  ],
  "files": [
    {
      "path": "src/registry/pure-ui/components/shadcn/ui/button/index.tsx",
      "content": "\"use client\";\r\n\r\nimport { cva, type VariantProps } from \"class-variance-authority\";\r\nimport { Slot, Slottable } from \"@radix-ui/react-slot\";\r\nimport { Loader2 } from \"lucide-react\";\r\n\r\nimport { cn } from \"@/lib/classes\";\r\n\r\nconst buttonVariants = cva(\r\n  [\r\n    `group inline-flex relative shrink-0 items-center justify-center w-fit touch-none whitespace-nowrap cursor-pointer outline-hidden`,\r\n    `focus-visible:ring-(--focus) focus-visible:ring-[2px] focus-visible:ring-offset-2 dark:focus-visible:ring-offset-(--accent-foreground)`,\r\n    `disabled:cursor-not-allowed disabled:scale-100 disabled:opacity-60 disabled:bg-(--accent-soft)`,\r\n    `[transition:scale_0.1s,box-shadow_0.2s,background_0.45s,width_0.2s] [transition-timing-function:cubic-bezier(.6,.04,.98,.335)] active:scale-97`,\r\n    `[&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4 [&_svg]:pointer-events-none`,\r\n  ],\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default: `bg-gradient-to-b from-(--accent)/80 dark:from-(--accent) to-(--accent) text-(--accent-foreground) hover:from-(--accent)/75 dark:hover:from-(--accent)/95`,\r\n        outline: `bg-(--accent)/10 border border-(--accent)/40 text-(--accent) hover:bg-(--accent)/15`,\r\n        ghost: `text-(--accent) hover:bg-(--accent)/10 focus-vislbe:bg-(--accent)/10 focus-visible:border-(--accent)/25`,\r\n        link: `text-(--accent) hover:underline hover:underline-offset-4 hover:decoration-1 focus-visible:underline focus-visible:underline-offset-4 focus-visible:decoration-1`,\r\n        danger:\r\n          \"bg-(--danger) text-white hover:bg-(--danger)/90 focus-visible:border-(--danger) focus-visible:bg-(--danger)/90 focus-visible:ring-(--danger) bg-gradient-to-t from-(--danger)/90 to-(--danger)\",\r\n      },\r\n      size: {\r\n        xs: \"h-6 px-2 text-xs\",\r\n        sm: \"h-8 px-3 text-sm\",\r\n        default: \"h-10 px-4 text-base\",\r\n        lg: \"h-12 px-6 text-lg\",\r\n      },\r\n      radius: {\r\n        none: \"rounded-none\",\r\n        sm: \"rounded-sm\",\r\n        default: \"rounded-md\",\r\n        lg: \"rounded-lg\",\r\n        xl: \"rounded-xl\",\r\n        full: \"rounded-full\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n      size: \"default\",\r\n      radius: \"default\",\r\n    },\r\n  }\r\n);\r\n\r\ninterface ButtonProps\r\n  extends React.ComponentProps<\"button\">,\r\n    VariantProps<typeof buttonVariants> {\r\n  pending?: boolean;\r\n  asChild?: boolean;\r\n  reduceMotion?: boolean;\r\n}\r\n\r\nfunction Button({\r\n  pending = false,\r\n  className,\r\n  variant = \"default\",\r\n  size = \"default\",\r\n  radius = \"default\",\r\n  children,\r\n  asChild = false,\r\n  reduceMotion = false,\r\n  ...props\r\n}: ButtonProps) {\r\n  const Comp = asChild ? Slot : \"button\";\r\n  const motionless = reduceMotion ? \"transition-none\" : undefined;\r\n  const loaderTransition = reduceMotion\r\n    ? \"transition-none\"\r\n    : \"transition-[margin,width,opacity,translate,scale] duration-200 [transition-timing-function:cubic-bezier(.25,.46,.45,.94)]\";\r\n  const contentTransition = reduceMotion\r\n    ? \"transition-none\"\r\n    : \"transition-transform duration-200 [transition-timing-function:cubic-bezier(.25,.46,.45,.94)]\";\r\n\r\n  return (\r\n    <Comp\r\n      data-slot=\"button\"\r\n      className={cn(\r\n        buttonVariants({ className, variant, size, radius }),\r\n        pending && \"cursor-wait active:scale-100\",\r\n        reduceMotion && motionless\r\n      )}\r\n      data-pending={pending ? \"\" : undefined}\r\n      aria-busy={pending}\r\n      {...props}\r\n    >\r\n      <span className={cn(\"flex items-center\", motionless)}>\r\n        <span\r\n          aria-hidden=\"true\"\r\n          className={cn(\r\n            \"flex h-4.5 shrink-0 items-center justify-center overflow-hidden\",\r\n            loaderTransition,\r\n            pending\r\n              ? \"mr-2 w-4.5 opacity-100 translate-x-0 scale-100\"\r\n              : \"mr-0 w-0 opacity-0 translate-x-2 scale-60\"\r\n          )}\r\n        >\r\n          <Loader2\r\n            className={cn(\"size-4.5\", !reduceMotion && \"animate-spin\")}\r\n          />\r\n        </span>\r\n        <span className={cn(\"flex items-center\", contentTransition, className)}>\r\n          <Slottable>{children}</Slottable>\r\n        </span>\r\n      </span>\r\n    </Comp>\r\n  );\r\n}\r\n\r\nexport { Button, buttonVariants };\r\n",
      "type": "registry:ui"
    }
  ]
}