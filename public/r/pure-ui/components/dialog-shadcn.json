{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "dialog-shadcn",
  "type": "registry:ui",
  "title": "Dialog",
  "description": "A customizable dialog component",
  "dependencies": [
    "class-variance-authority",
    "clsx",
    "tailwind-merge",
    "@radix-ui/react-dialog",
    "motion"
  ],
  "files": [
    {
      "path": "src/registry/pure-ui/components/shadcn/ui/dialog/index.tsx",
      "content": "\"use client\";\r\n\r\nimport * as React from \"react\";\r\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\";\r\nimport {\r\n  AnimatePresence,\r\n  motion,\r\n  MotionConfig,\r\n  Transition,\r\n  TargetAndTransition,\r\n} from \"motion/react\";\r\nimport { XIcon } from \"lucide-react\";\r\n\r\nimport { cn } from \"@/lib/classes\";\r\n\r\nconst animationPresets = {\r\n  none: {\r\n    initial: {},\r\n    animate: {},\r\n    exit: {},\r\n  },\r\n  fade: {\r\n    initial: { opacity: 0 },\r\n    animate: { opacity: 1 },\r\n    exit: { opacity: 0 },\r\n  },\r\n  \"top-flip\": {\r\n    initial: {\r\n      opacity: 0,\r\n      filter: \"blur(4px)\",\r\n      transform: `perspective(1000px) rotateX(50deg) scale(0.8)`,\r\n    },\r\n    animate: {\r\n      opacity: 1,\r\n      filter: \"blur(0px)\",\r\n      transform: `perspective(1000px) rotateX(0deg) scale(1)`,\r\n    },\r\n    exit: {\r\n      opacity: 0,\r\n      filter: \"blur(4px)\",\r\n      transform: `perspective(1000px) rotateX(50deg) scale(0.8)`,\r\n    },\r\n  },\r\n  \"bottom-flip\": {\r\n    initial: {\r\n      opacity: 0,\r\n      filter: \"blur(4px)\",\r\n      transform: `perspective(1000px) rotateX(-50deg) scale(0.8)`,\r\n    },\r\n    animate: {\r\n      opacity: 1,\r\n      filter: \"blur(0px)\",\r\n      transform: `perspective(1000px) rotateX(0deg) scale(1)`,\r\n    },\r\n    exit: {\r\n      opacity: 0,\r\n      filter: \"blur(4px)\",\r\n      transform: `perspective(1000px) rotateX(-50deg) scale(0.8)`,\r\n    },\r\n  },\r\n  \"right-flip\": {\r\n    initial: {\r\n      opacity: 0,\r\n      filter: \"blur(4px)\",\r\n      transform: `perspective(1000px) rotateY(50deg) scale(0.8)`,\r\n    },\r\n    animate: {\r\n      opacity: 1,\r\n      filter: \"blur(0px)\",\r\n      transform: `perspective(1000px) rotateY(0deg) scale(1)`,\r\n    },\r\n    exit: {\r\n      opacity: 0,\r\n      filter: \"blur(4px)\",\r\n      transform: `perspective(1000px) rotateY(50deg) scale(0.8)`,\r\n    },\r\n  },\r\n  \"left-flip\": {\r\n    initial: {\r\n      opacity: 0,\r\n      filter: \"blur(4px)\",\r\n      transform: `perspective(1000px) rotateY(-50deg) scale(0.8)`,\r\n    },\r\n    animate: {\r\n      opacity: 1,\r\n      filter: \"blur(0px)\",\r\n      transform: `perspective(1000px) rotateY(0deg) scale(1)`,\r\n    },\r\n    exit: {\r\n      opacity: 0,\r\n      filter: \"blur(4px)\",\r\n      transform: `perspective(1000px) rotateY(-50deg) scale(0.8)`,\r\n    },\r\n  },\r\n  scale: {\r\n    initial: {\r\n      opacity: 0,\r\n      transform: \"scale(0.8)\",\r\n    },\r\n    animate: {\r\n      opacity: 1,\r\n      transform: \"scale(1)\",\r\n    },\r\n    exit: {\r\n      opacity: 0,\r\n      transform: \"scale(0.8)\",\r\n    },\r\n  },\r\n  \"top-slide\": {\r\n    initial: {\r\n      opacity: 0,\r\n      transform: \"translateY(-100px)\",\r\n    },\r\n    animate: {\r\n      opacity: 1,\r\n      transform: \"translateY(0)\",\r\n    },\r\n    exit: {\r\n      opacity: 0,\r\n      transform: \"translateY(-100px)\",\r\n    },\r\n  },\r\n  \"bottom-slide\": {\r\n    initial: {\r\n      opacity: 0,\r\n      transform: \"translateY(100px)\",\r\n    },\r\n    animate: {\r\n      opacity: 1,\r\n      transform: \"translateY(0)\",\r\n    },\r\n    exit: {\r\n      opacity: 0,\r\n      transform: \"translateY(100px)\",\r\n    },\r\n  },\r\n  \"left-slide\": {\r\n    initial: {\r\n      opacity: 0,\r\n      transform: \"translateX(-100px)\",\r\n    },\r\n    animate: {\r\n      opacity: 1,\r\n      transform: \"translateX(0)\",\r\n    },\r\n    exit: {\r\n      opacity: 0,\r\n      transform: \"translateX(-100px)\",\r\n    },\r\n  },\r\n  \"right-slide\": {\r\n    initial: {\r\n      opacity: 0,\r\n      transform: \"translateX(100px)\",\r\n    },\r\n    animate: {\r\n      opacity: 1,\r\n      transform: \"translateX(0)\",\r\n    },\r\n    exit: {\r\n      opacity: 0,\r\n      transform: \"translateX(100px)\",\r\n    },\r\n  },\r\n  \"top-wipe\": {\r\n    initial: {\r\n      opacity: 0,\r\n      clipPath: \"inset(0 0 100% 0)\",\r\n    },\r\n    animate: {\r\n      opacity: 1,\r\n      clipPath: \"inset(0 0 0% 0)\",\r\n    },\r\n    exit: {\r\n      opacity: 0,\r\n      clipPath: \"inset(0 0 100% 0)\",\r\n    },\r\n  },\r\n  \"bottom-wipe\": {\r\n    initial: {\r\n      opacity: 0,\r\n      clipPath: \"inset(100% 0 0 0)\",\r\n    },\r\n    animate: {\r\n      opacity: 1,\r\n      clipPath: \"inset(0% 0 0 0)\",\r\n    },\r\n    exit: {\r\n      opacity: 0,\r\n      clipPath: \"inset(100% 0 0 0)\",\r\n    },\r\n  },\r\n  \"left-wipe\": {\r\n    initial: {\r\n      opacity: 0,\r\n      clipPath: \"inset(0 100% 0 0)\",\r\n    },\r\n    animate: {\r\n      opacity: 1,\r\n      clipPath: \"inset(0 0% 0 0)\",\r\n    },\r\n    exit: {\r\n      opacity: 0,\r\n      clipPath: \"inset(0 100% 0 0)\",\r\n    },\r\n  },\r\n  \"right-wipe\": {\r\n    initial: {\r\n      opacity: 0,\r\n      clipPath: \"inset(0 0 0 100%)\",\r\n    },\r\n    animate: {\r\n      opacity: 1,\r\n      clipPath: \"inset(0 0 0 0%)\",\r\n    },\r\n    exit: {\r\n      opacity: 0,\r\n      clipPath: \"inset(0 0 0 100%)\",\r\n    },\r\n  },\r\n  \"center-wipe\": {\r\n    initial: {\r\n      opacity: 0,\r\n      clipPath: \"inset(50% 50% 50% 50%)\",\r\n    },\r\n    animate: {\r\n      opacity: 1,\r\n      clipPath: \"inset(0% 0% 0% 0%)\",\r\n    },\r\n    exit: {\r\n      opacity: 0,\r\n      clipPath: \"inset(50% 50% 50% 50%)\",\r\n    },\r\n  },\r\n\r\n  burst: {\r\n    initial: {\r\n      opacity: 0,\r\n      clipPath: \"inset(10% 50% 90% 50% round 10px)\",\r\n      filter: \"blur(2px)\",\r\n    },\r\n    animate: {\r\n      opacity: 1,\r\n      clipPath: \"inset(0% 0% 0% 0% round 10px)\",\r\n      filter: \"blur(0px)\",\r\n    },\r\n    exit: {\r\n      opacity: 0,\r\n      clipPath: \"inset(10% 50% 90% 50% round 10px)\",\r\n      filter: \"blur(2px)\",\r\n    },\r\n  },\r\n  // \"burst-scale\": {\r\n  //   initial: {\r\n  //     opacity: 0,\r\n  //     scale: 0.2,\r\n  //     filter: \"blur(12px)\",\r\n  //     transformOrigin: \"top center\",\r\n  //     clipPath: \"polygon(50% 0%, 50% 0%, 50% 0%, 50% 0%)\",\r\n  //   },\r\n  //   animate: {\r\n  //     opacity: 1,\r\n  //     scale: 1,\r\n  //     filter: \"blur(0px)\",\r\n  //     transformOrigin: \"top center\",\r\n  //     clipPath: \"polygon(0% 0%, 100% 0%, 100% 100%, 0% 100%)\",\r\n  //   },\r\n  //   exit: {\r\n  //     opacity: 0,\r\n  //     scale: 0.2,\r\n  //     filter: \"blur(12px)\",\r\n  //     transformOrigin: \"top center\",\r\n  //     clipPath: \"polygon(50% 0%, 50% 0%, 50% 0%, 50% 0%)\",\r\n  //   },\r\n  // },\r\n};\r\n\r\nconst transitionPresets = {\r\n  // Premium spring presets with refined physics\r\n  default: {\r\n    type: \"spring\",\r\n    stiffness: 200,\r\n    damping: 22,\r\n    mass: 0.7,\r\n    restDelta: 0.01,\r\n    restSpeed: 0.01,\r\n  },\r\n  butter: {\r\n    type: \"spring\",\r\n    stiffness: 160,\r\n    damping: 20,\r\n    mass: 0.8,\r\n    restDelta: 0.01,\r\n    restSpeed: 0.01,\r\n  },\r\n  silk: {\r\n    type: \"spring\",\r\n    stiffness: 140,\r\n    damping: 24,\r\n    mass: 0.9,\r\n    restDelta: 0.005,\r\n    restSpeed: 0.005,\r\n  },\r\n  velvet: {\r\n    type: \"spring\",\r\n    stiffness: 120,\r\n    damping: 26,\r\n    mass: 1.0,\r\n    restDelta: 0.005,\r\n    restSpeed: 0.005,\r\n  },\r\n  bouncy: {\r\n    type: \"spring\",\r\n    stiffness: 280,\r\n    damping: 16,\r\n    mass: 0.6,\r\n    restDelta: 0.01,\r\n    restSpeed: 0.01,\r\n  },\r\n  gentle: {\r\n    type: \"spring\",\r\n    stiffness: 100,\r\n    damping: 28,\r\n    mass: 1.2,\r\n    restDelta: 0.005,\r\n    restSpeed: 0.005,\r\n  },\r\n\r\n  // Apple-inspired easing curves with refined timing\r\n  smooth: {\r\n    type: \"tween\",\r\n    ease: [0.25, 0.1, 0.25, 1], // Classic ease-in-out-quart\r\n    duration: 0.4,\r\n  },\r\n  quickOut: {\r\n    type: \"tween\",\r\n    ease: [0.25, 0.46, 0.45, 0.94], // Material Design emphasized\r\n    duration: 0.35,\r\n  },\r\n  swiftOut: {\r\n    type: \"tween\",\r\n    ease: [0.4, 0, 0.2, 1], // Material Design standard\r\n    duration: 0.3,\r\n  },\r\n  anticipate: {\r\n    type: \"tween\",\r\n    ease: [0.68, -0.55, 0.265, 1.55],\r\n    duration: 0.45,\r\n  },\r\n\r\n  // Ultra-smooth premium curves\r\n  premium: {\r\n    type: \"tween\",\r\n    ease: [0.19, 1, 0.22, 1], // Ultra-smooth out curve\r\n    duration: 0.4,\r\n  },\r\n  luxury: {\r\n    type: \"tween\",\r\n    ease: [0.16, 1, 0.3, 1], // Luxury brand feel\r\n    duration: 0.45,\r\n  },\r\n  fluid: {\r\n    type: \"tween\",\r\n    ease: [0.23, 1, 0.32, 1], // Fluid motion\r\n    duration: 0.38,\r\n  },\r\n\r\n  // Apple Motion curves\r\n  appleEase: {\r\n    type: \"tween\",\r\n    ease: [0.25, 0.1, 0.25, 1],\r\n    duration: 0.4,\r\n  },\r\n  appleSpring: {\r\n    type: \"spring\",\r\n    stiffness: 180,\r\n    damping: 22,\r\n    mass: 0.75,\r\n    restDelta: 0.01,\r\n    restSpeed: 0.01,\r\n  },\r\n\r\n  // Google Material Design 3.0 curves\r\n  emphasized: {\r\n    type: \"tween\",\r\n    ease: [0.05, 0.7, 0.1, 1],\r\n    duration: 0.5,\r\n  },\r\n  emphasizedAccelerate: {\r\n    type: \"tween\",\r\n    ease: [0.3, 0, 0.8, 0.15],\r\n    duration: 0.2,\r\n  },\r\n  emphasizedDecelerate: {\r\n    type: \"tween\",\r\n    ease: [0.05, 0.7, 0.1, 1],\r\n    duration: 0.4,\r\n  },\r\n  standard: {\r\n    type: \"tween\",\r\n    ease: [0.2, 0, 0, 1],\r\n    duration: 0.3,\r\n  },\r\n\r\n  // Performance-optimized presets\r\n  snappy: {\r\n    type: \"spring\",\r\n    stiffness: 320,\r\n    damping: 24,\r\n    mass: 0.5,\r\n    restDelta: 0.01,\r\n    restSpeed: 0.01,\r\n  },\r\n  instant: {\r\n    type: \"spring\",\r\n    stiffness: 500,\r\n    damping: 30,\r\n    mass: 0.4,\r\n    restDelta: 0.005,\r\n    restSpeed: 0.005,\r\n  },\r\n  burst: {\r\n    type: \"spring\",\r\n    stiffness: 200,\r\n    damping: 21,\r\n    mass: 0.5,\r\n  },\r\n\r\n  // Refined classical easing functions\r\n  inQuad: { type: \"tween\", ease: [0.55, 0.085, 0.68, 0.53], duration: 0.35 },\r\n  inCubic: { type: \"tween\", ease: [0.55, 0.055, 0.675, 0.19], duration: 0.35 },\r\n  inQuart: { type: \"tween\", ease: [0.895, 0.03, 0.685, 0.22], duration: 0.35 },\r\n  inQuint: { type: \"tween\", ease: [0.755, 0.05, 0.855, 0.06], duration: 0.35 },\r\n  inExpo: { type: \"tween\", ease: [0.95, 0.05, 0.795, 0.035], duration: 0.35 },\r\n  inCirc: { type: \"tween\", ease: [0.6, 0.04, 0.98, 0.335], duration: 0.35 },\r\n\r\n  outQuad: { type: \"tween\", ease: [0.25, 0.46, 0.45, 0.94], duration: 0.35 },\r\n  outCubic: { type: \"tween\", ease: [0.215, 0.61, 0.355, 1], duration: 0.35 },\r\n  outQuart: { type: \"tween\", ease: [0.165, 0.84, 0.44, 1], duration: 0.35 },\r\n  outQuint: { type: \"tween\", ease: [0.23, 1, 0.32, 1], duration: 0.35 },\r\n  outExpo: { type: \"tween\", ease: [0.19, 1, 0.22, 1], duration: 0.35 },\r\n  outCirc: { type: \"tween\", ease: [0.075, 0.82, 0.165, 1], duration: 0.35 },\r\n\r\n  inOutQuad: {\r\n    type: \"tween\",\r\n    ease: [0.455, 0.03, 0.515, 0.955],\r\n    duration: 0.4,\r\n  },\r\n  inOutCubic: { type: \"tween\", ease: [0.645, 0.045, 0.355, 1], duration: 0.4 },\r\n  inOutQuart: { type: \"tween\", ease: [0.77, 0, 0.175, 1], duration: 0.4 },\r\n  inOutQuint: { type: \"tween\", ease: [0.86, 0, 0.07, 1], duration: 0.4 },\r\n  inOutExpo: { type: \"tween\", ease: [1, 0, 0, 1], duration: 0.4 },\r\n  inOutCirc: { type: \"tween\", ease: [0.785, 0.135, 0.15, 0.86], duration: 0.4 },\r\n\r\n  // Utility curves\r\n  inOut: { type: \"tween\", ease: [0.42, 0, 0.58, 1], duration: 0.35 },\r\n  in: { type: \"tween\", ease: [0.4, 0, 1, 1], duration: 0.3 },\r\n  out: { type: \"tween\", ease: [0, 0, 0.2, 1], duration: 0.3 },\r\n  linear: { type: \"tween\", ease: \"linear\", duration: 0.3 },\r\n} as const;\r\n\r\ntype AnimationPreset = keyof typeof animationPresets;\r\ntype TransitionPreset = keyof typeof transitionPresets;\r\n\r\ninterface CustomAnimation {\r\n  initial?: TargetAndTransition;\r\n  animate?: TargetAndTransition;\r\n  exit?: TargetAndTransition;\r\n}\r\n\r\ninterface DialogContextType {\r\n  isOpen?: boolean;\r\n}\r\n\r\nconst DialogContext = React.createContext<DialogContextType>({});\r\n\r\ninterface DialogProps\r\n  extends React.ComponentProps<typeof DialogPrimitive.Root> {}\r\n\r\nfunction Dialog(props: DialogProps) {\r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    if (props?.open !== undefined) setIsOpen(props.open);\r\n  }, [props?.open]);\r\n\r\n  const handleOpenChange = React.useCallback(\r\n    (open: boolean) => {\r\n      setIsOpen(open);\r\n      props.onOpenChange?.(open);\r\n    },\r\n    [props]\r\n  );\r\n\r\n  return (\r\n    <DialogContext.Provider\r\n      value={{\r\n        isOpen,\r\n      }}\r\n    >\r\n      <DialogPrimitive.Root\r\n        data-slot=\"dialog\"\r\n        {...props}\r\n        onOpenChange={handleOpenChange}\r\n      />\r\n    </DialogContext.Provider>\r\n  );\r\n}\r\n\r\ninterface DialogTriggerProps\r\n  extends React.ComponentProps<typeof DialogPrimitive.Trigger> {}\r\n\r\nfunction DialogTrigger(props: DialogTriggerProps) {\r\n  return <DialogPrimitive.Trigger data-slot=\"dialog-trigger\" {...props} />;\r\n}\r\n\r\ninterface DialogPortalProps\r\n  extends React.ComponentProps<typeof DialogPrimitive.Portal> {}\r\n\r\nfunction DialogPortal(props: DialogPortalProps) {\r\n  return <DialogPrimitive.Portal data-slot=\"dialog-portal\" {...props} />;\r\n}\r\n\r\ninterface DialogCloseProps\r\n  extends React.ComponentProps<typeof DialogPrimitive.Close> {}\r\n\r\nfunction DialogClose(props: DialogCloseProps) {\r\n  return <DialogPrimitive.Close data-slot=\"dialog-close\" {...props} />;\r\n}\r\n\r\nfunction DialogOverlay({\r\n  className,\r\n  ...props\r\n}: React.ComponentProps<typeof DialogPrimitive.Overlay>) {\r\n  return (\r\n    <DialogPrimitive.Overlay\r\n      data-slot=\"dialog-overlay\"\r\n      className={cn(\r\n        \"fixed inset-0 z-50 pointer-events-none bg-black/50 backdrop-blur-[1px]\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\ninterface DialogContentProps\r\n  extends React.ComponentProps<typeof DialogPrimitive.Content> {\r\n  animationPreset?: AnimationPreset;\r\n  transitionPreset?: TransitionPreset;\r\n  animation?: CustomAnimation;\r\n  transition?: Transition;\r\n  reduceMotion?: boolean;\r\n  showCloseButton?: boolean;\r\n}\r\n\r\nfunction DialogContent({\r\n  className,\r\n  children,\r\n  animationPreset = \"top-flip\",\r\n  animation,\r\n  transitionPreset = \"burst\",\r\n  transition,\r\n  reduceMotion = false,\r\n  showCloseButton = true,\r\n  ...props\r\n}: DialogContentProps) {\r\n  const { isOpen } = React.useContext(DialogContext);\r\n\r\n  const animationConfig = React.useMemo(() => {\r\n    if (animation) {\r\n      return animation;\r\n    }\r\n\r\n    if (animationPreset) {\r\n      return animationPresets[animationPreset];\r\n    }\r\n\r\n    return animationPresets.fade;\r\n  }, [animation, animationPreset]);\r\n\r\n  const transitionConfig = React.useMemo(() => {\r\n    if (transition) {\r\n      return transition;\r\n    }\r\n\r\n    if (transitionPreset) {\r\n      return transitionPresets[transitionPreset];\r\n    }\r\n\r\n    return transitionPresets.butter;\r\n  }, [transition, transitionPreset]);\r\n\r\n  return (\r\n    <MotionConfig reducedMotion={reduceMotion ? \"always\" : \"never\"}>\r\n      <AnimatePresence mode=\"wait\">\r\n        {isOpen && (\r\n          <DialogPortal forceMount data-slot=\"dialog-portal\">\r\n            <DialogOverlay asChild forceMount>\r\n              <motion.div\r\n                key=\"dialog-overlay\"\r\n                initial={{ opacity: 0 }}\r\n                animate={{ opacity: 1 }}\r\n                exit={{ opacity: 0 }}\r\n                transition={{ duration: 0.4, ease: \"easeInOut\" }}\r\n              />\r\n            </DialogOverlay>\r\n\r\n            <DialogPrimitive.Content asChild forceMount {...props}>\r\n              <div className=\"pure-ui\">\r\n                <motion.div\r\n                  key=\"dialog-content\"\r\n                  initial={animationConfig.initial}\r\n                  animate={animationConfig.animate}\r\n                  exit={animationConfig.exit}\r\n                  transition={transitionConfig}\r\n                  style={{\r\n                    willChange: \"transform, opacity, filter, clipPath\",\r\n                    perspective: \"1000px\",\r\n                  }}\r\n                  className=\"pointer-events-auto fixed top-1/2 left-1/2 z-50 grid w-full max-w-[calc(100%-2rem)] translate-x-[-50%] translate-y-[-50%] gap-4 rounded-lg border border-(--border) p-6 shadow-lg duration-200 sm:max-w-lg bg-(--muted)\"\r\n                >\r\n                  {children}\r\n                  {showCloseButton && (\r\n                    <DialogPrimitive.Close\r\n                      data-slot=\"dialog-close\"\r\n                      className=\"ring-offset-(--background) focus:ring-(--focus) data-[state=open]:bg-(--accent) data-[state=open]:text-(--muted-foreground) absolute top-4 right-4 rounded-xs opacity-70 transition-opacity hover:opacity-100 focus:ring-2 focus:ring-offset-2 focus:outline-hidden disabled:pointer-events-none [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\"\r\n                    >\r\n                      <XIcon />\r\n                      <span className=\"sr-only\">Close</span>\r\n                    </DialogPrimitive.Close>\r\n                  )}\r\n                </motion.div>\r\n              </div>\r\n            </DialogPrimitive.Content>\r\n          </DialogPortal>\r\n        )}\r\n      </AnimatePresence>\r\n    </MotionConfig>\r\n  );\r\n}\r\n\r\nfunction DialogHeader({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"dialog-header\"\r\n      className={cn(\"flex flex-col gap-2 text-center sm:text-left\", className)}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\nfunction DialogFooter({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"dialog-footer\"\r\n      className={cn(\r\n        \"flex flex-col-reverse gap-2 sm:flex-row sm:justify-end\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\nfunction DialogTitle({\r\n  className,\r\n  ...props\r\n}: React.ComponentProps<typeof DialogPrimitive.Title>) {\r\n  return (\r\n    <DialogPrimitive.Title\r\n      data-slot=\"dialog-title\"\r\n      className={cn(\"text-lg leading-none font-semibold\", className)}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\nfunction DialogDescription({\r\n  className,\r\n  ...props\r\n}: React.ComponentProps<typeof DialogPrimitive.Description>) {\r\n  return (\r\n    <DialogPrimitive.Description\r\n      data-slot=\"dialog-description\"\r\n      className={cn(\"text-muted-foreground text-sm\", className)}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\nexport {\r\n  Dialog,\r\n  DialogClose,\r\n  DialogContent,\r\n  DialogDescription,\r\n  DialogFooter,\r\n  DialogHeader,\r\n  DialogOverlay,\r\n  DialogPortal,\r\n  DialogTitle,\r\n  DialogTrigger,\r\n};\r\n",
      "type": "registry:ui"
    }
  ]
}